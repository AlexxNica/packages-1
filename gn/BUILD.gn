# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # list of modules
  modules = "default"
  # if true, mkbootfs will compress the user.bootfs
  compress_bootfs = true
}

group("default") {
  testonly = true

  deps = [
    ":mkbootfs",
  ]
}

action("mkbootfs") {
  testonly = true

  manifest_file = rebase_path("user.bootfs.manifest", "", target_gen_dir)
  depfile = "$target_gen_dir/mkbootfs.d"
  component_index = "$root_gen_dir/component_index.json"

  all_binaries = exec_script("process_modules.py",
                             [
                               "--manifest",
                               manifest_file,
                               "--modules",
                               modules,
                               "--build-root",
                               rebase_path(root_build_dir),
                               "--depfile",
                               rebase_path(depfile),
                               "--component-index",
                               rebase_path(component_index),
                               "--arch",
                               target_cpu
                             ],
                             "list lines")

  script = "make_bootfs.py"
  output_file = "$root_build_dir/user.bootfs"
  build_id_file = "$root_build_dir/ids.txt"
  outputs = [
    output_file,
    build_id_file,
    component_index,
  ]
  deps = all_binaries

  args = [
    "--output-file",
    rebase_path(output_file),
    "--build-id-map",
    rebase_path(build_id_file),
    "--manifest",
    rebase_path(manifest_file),
  ]

  if (compress_bootfs) {
    args += [ "--compress" ]
  }
}
