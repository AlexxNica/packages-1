# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # list of modules
  modules = "default"

  # list of files omitted from user.bootfs
  omit_files = ""

  # path to autorun script
  autorun = ""
}

group("default") {
  testonly = true

  deps = [
    ":mkbootfs",
  ]
}

action("mkbootfs") {
  testonly = true

  packages_file = rebase_path("packages", "", target_gen_dir)

  boot_manifest_file = rebase_path("boot.bootfs.manifest", "", target_gen_dir)
  system_manifest_file =
      rebase_path("system.bootfs.manifest", "", target_gen_dir)
  depfile = "$target_gen_dir/mkbootfs.d"
  component_index = "$root_gen_dir/component_index.json"

  deps = exec_script("process_modules.py",
                     [
                       "--packages",
                       packages_file,
                       "--boot-manifest",
                       boot_manifest_file,
                       "--system-manifest",
                       system_manifest_file,
                       "--modules",
                       modules,
                       "--omit-files",
                       omit_files,
                       "--autorun",
                       autorun,
                       "--build-root",
                       rebase_path(root_build_dir),
                       "--depfile",
                       rebase_path(depfile),
                       "--component-index",
                       rebase_path(component_index),
                       "--arch",
                       target_cpu,
                     ],
                     "list lines")

  script = "make_bootfs.py"
  system_bootfs = "$root_build_dir/user.bootfs"
  build_id_file = "$root_build_dir/ids.txt"
  outputs = [
    system_bootfs,
    build_id_file,
    component_index,
  ]

  magenta_bootdata = "//out/build-magenta/build-$magenta_project/bootdata.bin"

  inputs = [
    magenta_bootdata,
  ]

  args = [
    "--output-file",
    rebase_path(system_bootfs),
    "--build-id-map",
    rebase_path(build_id_file),
    "--boot-manifest",
    rebase_path(boot_manifest_file),
    "--system-manifest",
    rebase_path(system_manifest_file),
    "--pre-binaries",
    rebase_path(magenta_bootdata),
  ]
  args += read_file(packages_file, "list lines")
}
